/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapTokenV2, SwapTokenV2Interface } from "../SwapTokenV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "__Swap_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_decimal",
        type: "uint32",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenToRate",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "decimal",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f27806100206000396000f3fe6080604052600436106100745760003560e01c806369328dec1161004e57806369328dec146100fe578063715018a61461011a5780638da5cb5b14610131578063f2fde38b1461015c5761007b565b806306be215814610080578063341e759d146100a957806339cda63a146100e75761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a46565b610185565b005b3480156100b557600080fd5b506100d060048036038101906100cb91906109ce565b6102ae565b6040516100de929190610cb6565b60405180910390f35b3480156100f357600080fd5b506100fc6102e2565b005b610118600480360381019061011391906109f7565b6103ce565b005b34801561012657600080fd5b5061012f6105cb565b005b34801561013d57600080fd5b50610146610653565b6040516101539190610bd2565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e91906109ce565b61067d565b005b61018d610775565b73ffffffffffffffffffffffffffffffffffffffff166101ab610653565b73ffffffffffffffffffffffffffffffffffffffff1614610201576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f890610c56565b60405180910390fd5b81606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548163ffffffff021916908363ffffffff160217905550505050565b60656020528060005260406000206000915090508060000154908060010160009054906101000a900463ffffffff16905082565b600060019054906101000a900460ff1661030a5760008054906101000a900460ff1615610313565b61031261077d565b5b610352576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034990610c36565b60405180910390fd5b60008060019054906101000a900460ff1615905080156103a2576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6103aa61078e565b80156103cb5760008060016101000a81548160ff0219169083151502179055505b50565b6103d6610775565b73ffffffffffffffffffffffffffffffffffffffff166103f4610653565b73ffffffffffffffffffffffffffffffffffffffff161461044a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044190610c56565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105315760008173ffffffffffffffffffffffffffffffffffffffff16836040516104a590610bbd565b60006040518083038185875af1925050503d80600081146104e2576040519150601f19603f3d011682016040523d82523d6000602084013e6104e7565b606091505b505090508061052b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052290610c76565b60405180910390fd5b506105c6565b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83856040518363ffffffff1660e01b8152600401610571929190610bed565b602060405180830381600087803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c39190610a95565b50505b505050565b6105d3610775565b73ffffffffffffffffffffffffffffffffffffffff166105f1610653565b73ffffffffffffffffffffffffffffffffffffffff1614610647576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063e90610c56565b60405180910390fd5b61065160006107ef565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610685610775565b73ffffffffffffffffffffffffffffffffffffffff166106a3610653565b73ffffffffffffffffffffffffffffffffffffffff16146106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f090610c56565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076090610c16565b60405180910390fd5b610772816107ef565b50565b600033905090565b6000610788306108b5565b15905090565b600060019054906101000a900460ff166107dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d490610c96565b60405180910390fd5b6107e56108c8565b6107ed610919565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080823b905060008111915050919050565b600060019054906101000a900460ff16610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e90610c96565b60405180910390fd5b565b600060019054906101000a900460ff16610968576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095f90610c96565b60405180910390fd5b610978610973610775565b6107ef565b565b60008135905061098981610e95565b92915050565b60008151905061099e81610eac565b92915050565b6000813590506109b381610ec3565b92915050565b6000813590506109c881610eda565b92915050565b6000602082840312156109e057600080fd5b60006109ee8482850161097a565b91505092915050565b600080600060608486031215610a0c57600080fd5b6000610a1a8682870161097a565b9350506020610a2b868287016109a4565b9250506040610a3c8682870161097a565b9150509250925092565b600080600060608486031215610a5b57600080fd5b6000610a698682870161097a565b9350506020610a7a868287016109a4565b9250506040610a8b868287016109b9565b9150509250925092565b600060208284031215610aa757600080fd5b6000610ab58482850161098f565b91505092915050565b610ac781610cfb565b82525050565b6000610ada602683610cea565b9150610ae582610d53565b604082019050919050565b6000610afd602e83610cea565b9150610b0882610da2565b604082019050919050565b6000610b20602083610cea565b9150610b2b82610df1565b602082019050919050565b6000610b43601883610cea565b9150610b4e82610e1a565b602082019050919050565b6000610b66600083610cdf565b9150610b7182610e43565b600082019050919050565b6000610b89602b83610cea565b9150610b9482610e46565b604082019050919050565b610ba881610d39565b82525050565b610bb781610d43565b82525050565b6000610bc882610b59565b9150819050919050565b6000602082019050610be76000830184610abe565b92915050565b6000604082019050610c026000830185610abe565b610c0f6020830184610b9f565b9392505050565b60006020820190508181036000830152610c2f81610acd565b9050919050565b60006020820190508181036000830152610c4f81610af0565b9050919050565b60006020820190508181036000830152610c6f81610b13565b9050919050565b60006020820190508181036000830152610c8f81610b36565b9050919050565b60006020820190508181036000830152610caf81610b7c565b9050919050565b6000604082019050610ccb6000830185610b9f565b610cd86020830184610bae565b9392505050565b600081905092915050565b600082825260208201905092915050565b6000610d0682610d19565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6661696c656420746f207472616e7366657220746f6b656e0000000000000000600082015250565b50565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b610e9e81610cfb565b8114610ea957600080fd5b50565b610eb581610d0d565b8114610ec057600080fd5b50565b610ecc81610d39565b8114610ed757600080fd5b50565b610ee381610d43565b8114610eee57600080fd5b5056fea2646970667358221220b4d115995626997d6953c8bab21d6400c158eeb602672a7530d5a9fafa114cb764736f6c63430008040033";

type SwapTokenV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapTokenV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapTokenV2__factory extends ContractFactory {
  constructor(...args: SwapTokenV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapTokenV2> {
    return super.deploy(overrides || {}) as Promise<SwapTokenV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapTokenV2 {
    return super.attach(address) as SwapTokenV2;
  }
  connect(signer: Signer): SwapTokenV2__factory {
    return super.connect(signer) as SwapTokenV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapTokenV2Interface {
    return new utils.Interface(_abi) as SwapTokenV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapTokenV2 {
    return new Contract(address, _abi, signerOrProvider) as SwapTokenV2;
  }
}
