/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapTokenV2, SwapTokenV2Interface } from "../SwapTokenV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [],
    name: "__Swap_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "etherDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_decimal",
        type: "uint32",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenToRate",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "decimal",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "upgradeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610efe806100206000396000f3fe60806040526004361061008a5760003560e01c8063715018a611610059578063715018a6146101695780638da5cb5b14610180578063ac9d718f146101ab578063e1f71934146101e8578063f2fde38b14610225576100ca565b806306be2158146100cf5780632e1a7d4d146100f8578063341e759d1461011457806339cda63a14610152576100ca565b366100ca577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587433346040516100c0929190610bcc565b60405180910390a1005b600080fd5b3480156100db57600080fd5b506100f660048036038101906100f19190610a25565b61024e565b005b610112600480360381019061010d9190610a74565b610377565b005b34801561012057600080fd5b5061013b600480360381019061013691906109fc565b6104a3565b604051610149929190610cb0565b60405180910390f35b34801561015e57600080fd5b506101676104d7565b005b34801561017557600080fd5b5061017e6105c3565b005b34801561018c57600080fd5b5061019561064b565b6040516101a29190610bb1565b60405180910390f35b3480156101b757600080fd5b506101d260048036038101906101cd91906109fc565b610675565b6040516101df9190610bb1565b60405180910390f35b3480156101f457600080fd5b5061020f600480360381019061020a91906109fc565b6106a8565b60405161021c9190610c95565b60405180910390f35b34801561023157600080fd5b5061024c600480360381019061024791906109fc565b6106c0565b005b6102566107b8565b73ffffffffffffffffffffffffffffffffffffffff1661027461064b565b73ffffffffffffffffffffffffffffffffffffffff16146102ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c190610c35565b60405180910390fd5b81606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548163ffffffff021916908363ffffffff160217905550505050565b61037f6107b8565b73ffffffffffffffffffffffffffffffffffffffff1661039d61064b565b73ffffffffffffffffffffffffffffffffffffffff16146103f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ea90610c35565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff168260405161041990610b9c565b60006040518083038185875af1925050503d8060008114610456576040519150601f19603f3d011682016040523d82523d6000602084013e61045b565b606091505b505090508061049f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049690610c55565b60405180910390fd5b5050565b60656020528060005260406000206000915090508060000154908060010160009054906101000a900463ffffffff16905082565b600060019054906101000a900460ff166104ff5760008054906101000a900460ff1615610508565b6105076107c0565b5b610547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053e90610c15565b60405180910390fd5b60008060019054906101000a900460ff161590508015610597576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61059f6107d1565b80156105c05760008060016101000a81548160ff0219169083151502179055505b50565b6105cb6107b8565b73ffffffffffffffffffffffffffffffffffffffff166105e961064b565b73ffffffffffffffffffffffffffffffffffffffff161461063f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063690610c35565b60405180910390fd5b6106496000610832565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60676020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60666020528060005260406000206000915090505481565b6106c86107b8565b73ffffffffffffffffffffffffffffffffffffffff166106e661064b565b73ffffffffffffffffffffffffffffffffffffffff161461073c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073390610c35565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a390610bf5565b60405180910390fd5b6107b581610832565b50565b600033905090565b60006107cb306108f8565b15905090565b600060019054906101000a900460ff16610820576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081790610c75565b60405180910390fd5b61082861090b565b61083061095c565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080823b905060008111915050919050565b600060019054906101000a900460ff1661095a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095190610c75565b60405180910390fd5b565b600060019054906101000a900460ff166109ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a290610c75565b60405180910390fd5b6109bb6109b66107b8565b610832565b565b6000813590506109cc81610e83565b92915050565b6000813590506109e181610e9a565b92915050565b6000813590506109f681610eb1565b92915050565b600060208284031215610a0e57600080fd5b6000610a1c848285016109bd565b91505092915050565b600080600060608486031215610a3a57600080fd5b6000610a48868287016109bd565b9350506020610a59868287016109d2565b9250506040610a6a868287016109e7565b9150509250925092565b600060208284031215610a8657600080fd5b6000610a94848285016109d2565b91505092915050565b610aa681610cf5565b82525050565b6000610ab9602683610ce4565b9150610ac482610d41565b604082019050919050565b6000610adc602e83610ce4565b9150610ae782610d90565b604082019050919050565b6000610aff602083610ce4565b9150610b0a82610ddf565b602082019050919050565b6000610b22601883610ce4565b9150610b2d82610e08565b602082019050919050565b6000610b45600083610cd9565b9150610b5082610e31565b600082019050919050565b6000610b68602b83610ce4565b9150610b7382610e34565b604082019050919050565b610b8781610d27565b82525050565b610b9681610d31565b82525050565b6000610ba782610b38565b9150819050919050565b6000602082019050610bc66000830184610a9d565b92915050565b6000604082019050610be16000830185610a9d565b610bee6020830184610b7e565b9392505050565b60006020820190508181036000830152610c0e81610aac565b9050919050565b60006020820190508181036000830152610c2e81610acf565b9050919050565b60006020820190508181036000830152610c4e81610af2565b9050919050565b60006020820190508181036000830152610c6e81610b15565b9050919050565b60006020820190508181036000830152610c8e81610b5b565b9050919050565b6000602082019050610caa6000830184610b7e565b92915050565b6000604082019050610cc56000830185610b7e565b610cd26020830184610b8d565b9392505050565b600081905092915050565b600082825260208201905092915050565b6000610d0082610d07565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6661696c656420746f207472616e7366657220746f6b656e0000000000000000600082015250565b50565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b610e8c81610cf5565b8114610e9757600080fd5b50565b610ea381610d27565b8114610eae57600080fd5b50565b610eba81610d31565b8114610ec557600080fd5b5056fea26469706673582212202115ada0c17d236bd402ba8ef09bac3f5b941355b6642a7f0e5f5930c9df3df564736f6c63430008040033";

type SwapTokenV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapTokenV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapTokenV2__factory extends ContractFactory {
  constructor(...args: SwapTokenV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapTokenV2> {
    return super.deploy(overrides || {}) as Promise<SwapTokenV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapTokenV2 {
    return super.attach(address) as SwapTokenV2;
  }
  connect(signer: Signer): SwapTokenV2__factory {
    return super.connect(signer) as SwapTokenV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapTokenV2Interface {
    return new utils.Interface(_abi) as SwapTokenV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapTokenV2 {
    return new Contract(address, _abi, signerOrProvider) as SwapTokenV2;
  }
}
