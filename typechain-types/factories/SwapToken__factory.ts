/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapToken, SwapTokenInterface } from "../SwapToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256[2]",
        name: "_rate",
        type: "uint256[2]",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_transferAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount1",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611aa38061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806358119bd21461005c578063715018a6146100785780638da5cb5b14610082578063a9678a18146100a0578063f2fde38b146100bc575b600080fd5b610076600480360381019061007191906113ad565b6100d8565b005b610080610601565b005b61008a610689565b6040516100979190611561565b60405180910390f35b6100ba60048036038101906100b5919061134a565b6106b2565b005b6100d660048036038101906100d19190611321565b610c68565b005b6100e0610d60565b73ffffffffffffffffffffffffffffffffffffffff166100fe610689565b73ffffffffffffffffffffffffffffffffffffffff1614610154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014b906116a5565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006002811061020b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b015414610409578060016002811061024c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060028110610306577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b018190555080600060028110610345577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001600281106103ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b01819055506105fc565b80600060028110610443577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281106104fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b01819055508060016002811061053c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001600281106105f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b01819055505b505050565b610609610d60565b73ffffffffffffffffffffffffffffffffffffffff16610627610689565b73ffffffffffffffffffffffffffffffffffffffff161461067d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610674906116a5565b60405180910390fd5b6106876000610d68565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b82826000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006002811061076b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b015414158061083157506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006002811061082c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b015414155b610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086790611625565b60405180910390fd5b6000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060028110610927577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b015414610ac9576000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281106109e5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0154600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600160028110610a9c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b015485610aa99190611772565b610ab39190611741565b9050610ac3338888888886610e2c565b50610c60565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600160028110610b80577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0154600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060028110610c37577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b015485610c449190611772565b610c4e9190611741565b9050610c5e338888888886610e2c565b505b505050505050565b610c70610d60565b73ffffffffffffffffffffffffffffffffffffffff16610c8e610689565b73ffffffffffffffffffffffffffffffffffffffff1614610ce4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdb906116a5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4b90611605565b60405180910390fd5b610d5d81610d68565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600084905060008490508773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e9b57508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610eda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed1906116c5565b60405180910390fd5b838273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e8a306040518363ffffffff1660e01b8152600401610f1692919061157c565b60206040518083038186803b158015610f2e57600080fd5b505afa158015610f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f669190611425565b1015610fa7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9e90611685565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146110c457828173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e89306040518363ffffffff1660e01b815260040161101692919061157c565b60206040518083038186803b15801561102e57600080fd5b505afa158015611042573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110669190611425565b10156110a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109e90611645565b60405180910390fd5b6110b382898987611169565b6110bf81888a86611169565b61115f565b6110d082898987611169565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb89856040518363ffffffff1660e01b815260040161110b9291906115dc565b602060405180830381600087803b15801561112557600080fd5b505af1158015611139573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115d91906113fc565b505b5050505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b81526004016111a8939291906115a5565b602060405180830381600087803b1580156111c257600080fd5b505af11580156111d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fa91906113fc565b90508061123c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123390611665565b60405180910390fd5b5050505050565b60006112566112518461170a565b6116e5565b9050808285602086028201111561126c57600080fd5b60005b8581101561129c578161128288826112f7565b84526020840193506020830192505060018101905061126f565b5050509392505050565b6000813590506112b581611a28565b92915050565b600082601f8301126112cc57600080fd5b60026112d9848285611243565b91505092915050565b6000815190506112f181611a3f565b92915050565b60008135905061130681611a56565b92915050565b60008151905061131b81611a56565b92915050565b60006020828403121561133357600080fd5b6000611341848285016112a6565b91505092915050565b6000806000806080858703121561136057600080fd5b600061136e878288016112a6565b945050602061137f878288016112a6565b9350506040611390878288016112a6565b92505060606113a1878288016112f7565b91505092959194509250565b6000806000608084860312156113c257600080fd5b60006113d0868287016112a6565b93505060206113e1868287016112a6565b92505060406113f2868287016112bb565b9150509250925092565b60006020828403121561140e57600080fd5b600061141c848285016112e2565b91505092915050565b60006020828403121561143757600080fd5b60006114458482850161130c565b91505092915050565b611457816117cc565b82525050565b600061146a602683611730565b9150611475826118e3565b604082019050919050565b600061148d601183611730565b915061149882611932565b602082019050919050565b60006114b0601983611730565b91506114bb8261195b565b602082019050919050565b60006114d3601583611730565b91506114de82611984565b602082019050919050565b60006114f6601983611730565b9150611501826119ad565b602082019050919050565b6000611519602083611730565b9150611524826119d6565b602082019050919050565b600061153c600e83611730565b9150611547826119ff565b602082019050919050565b61155b8161180a565b82525050565b6000602082019050611576600083018461144e565b92915050565b6000604082019050611591600083018561144e565b61159e602083018461144e565b9392505050565b60006060820190506115ba600083018661144e565b6115c7602083018561144e565b6115d46040830184611552565b949350505050565b60006040820190506115f1600083018561144e565b6115fe6020830184611552565b9392505050565b6000602082019050818103600083015261161e8161145d565b9050919050565b6000602082019050818103600083015261163e81611480565b9050919050565b6000602082019050818103600083015261165e816114a3565b9050919050565b6000602082019050818103600083015261167e816114c6565b9050919050565b6000602082019050818103600083015261169e816114e9565b9050919050565b600060208201905081810360008301526116be8161150c565b9050919050565b600060208201905081810360008301526116de8161152f565b9050919050565b60006116ef611700565b90506116fb8282611814565b919050565b6000604051905090565b600067ffffffffffffffff821115611725576117246118a3565b5b602082029050919050565b600082825260208201905092915050565b600061174c8261180a565b91506117578361180a565b92508261176757611766611874565b5b828204905092915050565b600061177d8261180a565b91506117888361180a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117c1576117c0611845565b5b828202905092915050565b60006117d7826117ea565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61181d826118d2565b810181811067ffffffffffffffff8211171561183c5761183b6118a3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f68617665206e6f74207365742072617465000000000000000000000000000000600082015250565b7f546f6b656e203220616c6c6f77616e636520746f6f206c6f7700000000000000600082015250565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b7f546f6b656e203120616c6c6f77616e636520746f6f206c6f7700000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b611a31816117cc565b8114611a3c57600080fd5b50565b611a48816117de565b8114611a5357600080fd5b50565b611a5f8161180a565b8114611a6a57600080fd5b5056fea2646970667358221220abdf2dbfd9460778424118b0305d7dacb61956cc6578623857964603006e3b6b64736f6c63430008040033";

type SwapTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapToken__factory extends ContractFactory {
  constructor(...args: SwapTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapToken> {
    return super.deploy(overrides || {}) as Promise<SwapToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapToken {
    return super.attach(address) as SwapToken;
  }
  connect(signer: Signer): SwapToken__factory {
    return super.connect(signer) as SwapToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapTokenInterface {
    return new utils.Interface(_abi) as SwapTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapToken {
    return new Contract(address, _abi, signerOrProvider) as SwapToken;
  }
}
