/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapToken, SwapTokenInterface } from "../SwapToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "__Swap_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "etherDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_decimal",
        type: "uint32",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount1",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenToRate",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "decimal",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611e8a806100206000396000f3fe6080604052600436106100955760003560e01c80638da5cb5b116100595780638da5cb5b1461019d578063df791e50146101c8578063e1758bd8146101f1578063e1f719341461021c578063f2fde38b14610259576100d5565b806306be2158146100da5780632e1a7d4d14610103578063341e759d1461011f5780635bd46b231461015d578063715018a614610186576100d5565b366100d5577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587433346040516100cb9291906116e2565b60405180910390a1005b600080fd5b3480156100e657600080fd5b5061010160048036038101906100fc91906113ce565b610282565b005b61011d60048036038101906101189190611446565b6103ab565b005b34801561012b57600080fd5b5061014660048036038101906101419190611356565b6104d7565b604051610154929190611868565b60405180910390f35b34801561016957600080fd5b50610184600480360381019061017f9190611356565b61050b565b005b34801561019257600080fd5b5061019b610639565b005b3480156101a957600080fd5b506101b26106c1565b6040516101bf9190611690565b60405180910390f35b3480156101d457600080fd5b506101ef60048036038101906101ea919061137f565b6106eb565b005b3480156101fd57600080fd5b50610206610947565b6040516102139190611690565b60405180910390f35b34801561022857600080fd5b50610243600480360381019061023e9190611356565b61096d565b604051610250919061184d565b60405180910390f35b34801561026557600080fd5b50610280600480360381019061027b9190611356565b610985565b005b61028a610a7d565b73ffffffffffffffffffffffffffffffffffffffff166102a86106c1565b73ffffffffffffffffffffffffffffffffffffffff16146102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f5906117ad565b60405180910390fd5b81606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548163ffffffff021916908363ffffffff160217905550505050565b6103b3610a7d565b73ffffffffffffffffffffffffffffffffffffffff166103d16106c1565b73ffffffffffffffffffffffffffffffffffffffff1614610427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041e906117ad565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff168260405161044d9061167b565b60006040518083038185875af1925050503d806000811461048a576040519150601f19603f3d011682016040523d82523d6000602084013e61048f565b606091505b50509050806104d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ca906117cd565b60405180910390fd5b5050565b60666020528060005260406000206000915090508060000154908060010160009054906101000a900463ffffffff16905082565b600060019054906101000a900460ff166105335760008054906101000a900460ff161561053c565b61053b610a85565b5b61057b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105729061178d565b60405180910390fd5b60008060019054906101000a900460ff1615905080156105cb576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6105d3610a96565b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156106355760008060016101000a81548160ff0219169083151502179055505b5050565b610641610a7d565b73ffffffffffffffffffffffffffffffffffffffff1661065f6106c1565b73ffffffffffffffffffffffffffffffffffffffff16146106b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ac906117ad565b60405180910390fd5b6106bf6000610af7565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b82826000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415801561078357506000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414155b6107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b99061174d565b60405180910390fd5b6000606660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900463ffffffff16600a6108239190611947565b606660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546108709190611a65565b606660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900463ffffffff16600a6108cf9190611947565b606660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548661091d9190611a65565b6109279190611a65565b61093191906118c3565b905061093f86868684610bbd565b505050505050565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60676020528060005260406000206000915090505481565b61098d610a7d565b73ffffffffffffffffffffffffffffffffffffffff166109ab6106c1565b73ffffffffffffffffffffffffffffffffffffffff1614610a01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f8906117ad565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a689061172d565b60405180910390fd5b610a7a81610af7565b50565b600033905090565b6000610a9030610f5a565b15905090565b600060019054906101000a900460ff16610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc9061180d565b60405180910390fd5b610aed610f6d565b610af5610fbe565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008490506000849050606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610d5f5760003073ffffffffffffffffffffffffffffffffffffffff1685604051610c439061167b565b60006040518083038185875af1925050503d8060008114610c80576040519150601f19603f3d011682016040523d82523d6000602084013e610c85565b606091505b5050905080610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc0906117cd565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610d049291906116e2565b602060405180830381600087803b158015610d1e57600080fd5b505af1158015610d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d56919061141d565b50505050610f54565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610e9657610de23330868573ffffffffffffffffffffffffffffffffffffffff1661101f909392919063ffffffff16565b60003373ffffffffffffffffffffffffffffffffffffffff1684604051610e089061167b565b60006040518083038185875af1925050503d8060008114610e45576040519150601f19603f3d011682016040523d82523d6000602084013e610e4a565b606091505b5050905080610e8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e85906117cd565b60405180910390fd5b505050610f54565b610ec33330868573ffffffffffffffffffffffffffffffffffffffff1661101f909392919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610efe9291906116e2565b602060405180830381600087803b158015610f1857600080fd5b505af1158015610f2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f50919061141d565b5050505b50505050565b600080823b905060008111915050919050565b600060019054906101000a900460ff16610fbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb39061180d565b60405180910390fd5b565b600060019054906101000a900460ff1661100d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110049061180d565b60405180910390fd5b61101d611018610a7d565b610af7565b565b6110a2846323b872dd60e01b858585604051602401611040939291906116ab565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506110a8565b50505050565b600061110a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661116f9092919063ffffffff16565b905060008151111561116a578080602001905181019061112a919061141d565b611169576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111609061182d565b60405180910390fd5b5b505050565b606061117e8484600085611187565b90509392505050565b6060824710156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c39061176d565b60405180910390fd5b6111d585610f5a565b611214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120b906117ed565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161123d9190611664565b60006040518083038185875af1925050503d806000811461127a576040519150601f19603f3d011682016040523d82523d6000602084013e61127f565b606091505b509150915061128f82828661129b565b92505050949350505050565b606083156112ab578290506112fb565b6000835111156112be5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f2919061170b565b60405180910390fd5b9392505050565b60008135905061131181611df8565b92915050565b60008151905061132681611e0f565b92915050565b60008135905061133b81611e26565b92915050565b60008135905061135081611e3d565b92915050565b60006020828403121561136857600080fd5b600061137684828501611302565b91505092915050565b60008060006060848603121561139457600080fd5b60006113a286828701611302565b93505060206113b386828701611302565b92505060406113c48682870161132c565b9150509250925092565b6000806000606084860312156113e357600080fd5b60006113f186828701611302565b93505060206114028682870161132c565b925050604061141386828701611341565b9150509250925092565b60006020828403121561142f57600080fd5b600061143d84828501611317565b91505092915050565b60006020828403121561145857600080fd5b60006114668482850161132c565b91505092915050565b61147881611abf565b82525050565b600061148982611891565b61149381856118a7565b93506114a3818560208601611b17565b80840191505092915050565b60006114ba8261189c565b6114c481856118b2565b93506114d4818560208601611b17565b6114dd81611ba8565b840191505092915050565b60006114f56026836118b2565b915061150082611bc6565b604082019050919050565b60006115186011836118b2565b915061152382611c15565b602082019050919050565b600061153b6026836118b2565b915061154682611c3e565b604082019050919050565b600061155e602e836118b2565b915061156982611c8d565b604082019050919050565b60006115816020836118b2565b915061158c82611cdc565b602082019050919050565b60006115a46018836118b2565b91506115af82611d05565b602082019050919050565b60006115c76000836118a7565b91506115d282611d2e565b600082019050919050565b60006115ea601d836118b2565b91506115f582611d31565b602082019050919050565b600061160d602b836118b2565b915061161882611d5a565b604082019050919050565b6000611630602a836118b2565b915061163b82611da9565b604082019050919050565b61164f81611afd565b82525050565b61165e81611b07565b82525050565b6000611670828461147e565b915081905092915050565b6000611686826115ba565b9150819050919050565b60006020820190506116a5600083018461146f565b92915050565b60006060820190506116c0600083018661146f565b6116cd602083018561146f565b6116da6040830184611646565b949350505050565b60006040820190506116f7600083018561146f565b6117046020830184611646565b9392505050565b6000602082019050818103600083015261172581846114af565b905092915050565b60006020820190508181036000830152611746816114e8565b9050919050565b600060208201905081810360008301526117668161150b565b9050919050565b600060208201905081810360008301526117868161152e565b9050919050565b600060208201905081810360008301526117a681611551565b9050919050565b600060208201905081810360008301526117c681611574565b9050919050565b600060208201905081810360008301526117e681611597565b9050919050565b60006020820190508181036000830152611806816115dd565b9050919050565b6000602082019050818103600083015261182681611600565b9050919050565b6000602082019050818103600083015261184681611623565b9050919050565b60006020820190506118626000830184611646565b92915050565b600060408201905061187d6000830185611646565b61188a6020830184611655565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006118ce82611afd565b91506118d983611afd565b9250826118e9576118e8611b79565b5b828204905092915050565b6000808291508390505b600185111561193e5780860481111561191a57611919611b4a565b5b60018516156119295780820291505b808102905061193785611bb9565b94506118fe565b94509492505050565b600061195282611afd565b915061195d83611b07565b925061198a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611992565b905092915050565b6000826119a25760019050611a5e565b816119b05760009050611a5e565b81600181146119c657600281146119d0576119ff565b6001915050611a5e565b60ff8411156119e2576119e1611b4a565b5b8360020a9150848211156119f9576119f8611b4a565b5b50611a5e565b5060208310610133831016604e8410600b8410161715611a345782820a905083811115611a2f57611a2e611b4a565b5b611a5e565b611a4184848460016118f4565b92509050818404811115611a5857611a57611b4a565b5b81810290505b9392505050565b6000611a7082611afd565b9150611a7b83611afd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611ab457611ab3611b4a565b5b828202905092915050565b6000611aca82611add565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60005b83811015611b35578082015181840152602081019050611b1a565b83811115611b44576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f68617665206e6f74207365742072617465000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6661696c656420746f207472616e7366657220746f6b656e0000000000000000600082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b611e0181611abf565b8114611e0c57600080fd5b50565b611e1881611ad1565b8114611e2357600080fd5b50565b611e2f81611afd565b8114611e3a57600080fd5b50565b611e4681611b07565b8114611e5157600080fd5b5056fea2646970667358221220730607f975ee4aa091373ac99541f512bc9aa32611115dcb00c72a712be5478664736f6c63430008040033";

type SwapTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapToken__factory extends ContractFactory {
  constructor(...args: SwapTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapToken> {
    return super.deploy(overrides || {}) as Promise<SwapToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapToken {
    return super.attach(address) as SwapToken;
  }
  connect(signer: Signer): SwapToken__factory {
    return super.connect(signer) as SwapToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapTokenInterface {
    return new utils.Interface(_abi) as SwapTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapToken {
    return new Contract(address, _abi, signerOrProvider) as SwapToken;
  }
}
