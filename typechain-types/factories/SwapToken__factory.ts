/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapToken, SwapTokenInterface } from "../SwapToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "__Swap_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_decimal",
        type: "uint32",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenToRate",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "decimal",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d15806100206000396000f3fe60806040526004361061007f5760003560e01c8063715018a61161004e578063715018a6146101255780638da5cb5b1461013c578063df791e5014610167578063f2fde38b1461019057610086565b806306be21581461008b578063341e759d146100b457806339cda63a146100f257806369328dec1461010957610086565b3661008657005b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad91906111c5565b6101b9565b005b3480156100c057600080fd5b506100db60048036038101906100d691906110fe565b6102e2565b6040516100e99291906116a1565b60405180910390f35b3480156100fe57600080fd5b50610107610316565b005b610123600480360381019061011e9190611176565b610402565b005b34801561013157600080fd5b5061013a61048e565b005b34801561014857600080fd5b50610151610516565b60405161015e91906114a4565b60405180910390f35b34801561017357600080fd5b5061018e60048036038101906101899190611127565b610540565b005b34801561019c57600080fd5b506101b760048036038101906101b291906110fe565b61079c565b005b6101c1610894565b73ffffffffffffffffffffffffffffffffffffffff166101df610516565b73ffffffffffffffffffffffffffffffffffffffff1614610235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022c906115e1565b60405180910390fd5b81606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548163ffffffff021916908363ffffffff160217905550505050565b60656020528060005260406000206000915090508060000154908060010160009054906101000a900463ffffffff16905082565b600060019054906101000a900460ff1661033e5760008054906101000a900460ff1615610347565b61034661089c565b5b610386576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037d906115c1565b60405180910390fd5b60008060019054906101000a900460ff1615905080156103d6576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6103de6108ad565b80156103ff5760008060016101000a81548160ff0219169083151502179055505b50565b61040a610894565b73ffffffffffffffffffffffffffffffffffffffff16610428610516565b73ffffffffffffffffffffffffffffffffffffffff161461047e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610475906115e1565b60405180910390fd5b61048983828461090e565b505050565b610496610894565b73ffffffffffffffffffffffffffffffffffffffff166104b4610516565b73ffffffffffffffffffffffffffffffffffffffff161461050a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610501906115e1565b60405180910390fd5b6105146000610a90565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b82826000606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141580156105d857506000606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414155b610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90611561565b60405180910390fd5b6000606560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900463ffffffff16600a6106789190611780565b606560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546106c5919061189e565b606560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900463ffffffff16600a6107249190611780565b606560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015486610772919061189e565b61077c919061189e565b61078691906116fc565b905061079486868684610b56565b505050505050565b6107a4610894565b73ffffffffffffffffffffffffffffffffffffffff166107c2610516565b73ffffffffffffffffffffffffffffffffffffffff1614610818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080f906115e1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087f90611541565b60405180910390fd5b61089181610a90565b50565b600033905090565b60006108a730610be1565b15905090565b600060019054906101000a900460ff166108fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f390611641565b60405180910390fd5b610904610bf4565b61090c610c45565b565b6000839050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156109fb5760008373ffffffffffffffffffffffffffffffffffffffff168360405161096e9061148f565b60006040518083038185875af1925050503d80600081146109ab576040519150601f19603f3d011682016040523d82523d6000602084013e6109b0565b606091505b50509050806109f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109eb90611601565b60405180910390fd5b5050610a8b565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401610a369291906114f6565b602060405180830381600087803b158015610a5057600080fd5b505af1158015610a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a889190611214565b50505b505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610bc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbc90611681565b60405180910390fd5b610bd0843384610ca6565b610bdb83338361090e565b50505050565b600080823b905060008111915050919050565b600060019054906101000a900460ff16610c43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3a90611641565b60405180910390fd5b565b600060019054906101000a900460ff16610c94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8b90611641565b60405180910390fd5b610ca4610c9f610894565b610a90565b565b6000839050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d935760003073ffffffffffffffffffffffffffffffffffffffff1683604051610d069061148f565b60006040518083038185875af1925050503d8060008114610d43576040519150601f19603f3d011682016040523d82523d6000602084013e610d48565b606091505b5050905080610d8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8390611581565b60405180910390fd5b5050610dc2565b610dc08330848473ffffffffffffffffffffffffffffffffffffffff16610dc7909392919063ffffffff16565b505b505050565b610e4a846323b872dd60e01b858585604051602401610de8939291906114bf565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610e50565b50505050565b6000610eb2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610f179092919063ffffffff16565b9050600081511115610f125780806020019051810190610ed29190611214565b610f11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0890611661565b60405180910390fd5b5b505050565b6060610f268484600085610f2f565b90509392505050565b606082471015610f74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6b906115a1565b60405180910390fd5b610f7d85610be1565b610fbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb390611621565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610fe59190611478565b60006040518083038185875af1925050503d8060008114611022576040519150601f19603f3d011682016040523d82523d6000602084013e611027565b606091505b5091509150611037828286611043565b92505050949350505050565b60608315611053578290506110a3565b6000835111156110665782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109a919061151f565b60405180910390fd5b9392505050565b6000813590506110b981611c83565b92915050565b6000815190506110ce81611c9a565b92915050565b6000813590506110e381611cb1565b92915050565b6000813590506110f881611cc8565b92915050565b60006020828403121561111057600080fd5b600061111e848285016110aa565b91505092915050565b60008060006060848603121561113c57600080fd5b600061114a868287016110aa565b935050602061115b868287016110aa565b925050604061116c868287016110d4565b9150509250925092565b60008060006060848603121561118b57600080fd5b6000611199868287016110aa565b93505060206111aa868287016110d4565b92505060406111bb868287016110aa565b9150509250925092565b6000806000606084860312156111da57600080fd5b60006111e8868287016110aa565b93505060206111f9868287016110d4565b925050604061120a868287016110e9565b9150509250925092565b60006020828403121561122657600080fd5b6000611234848285016110bf565b91505092915050565b611246816118f8565b82525050565b6000611257826116ca565b61126181856116e0565b9350611271818560208601611950565b80840191505092915050565b6000611288826116d5565b61129281856116eb565b93506112a2818560208601611950565b6112ab816119e1565b840191505092915050565b60006112c36026836116eb565b91506112ce826119ff565b604082019050919050565b60006112e66011836116eb565b91506112f182611a4e565b602082019050919050565b6000611309601c836116eb565b915061131482611a77565b602082019050919050565b600061132c6026836116eb565b915061133782611aa0565b604082019050919050565b600061134f602e836116eb565b915061135a82611aef565b604082019050919050565b60006113726020836116eb565b915061137d82611b3e565b602082019050919050565b60006113956000836116e0565b91506113a082611b67565b600082019050919050565b60006113b8601d836116eb565b91506113c382611b6a565b602082019050919050565b60006113db601d836116eb565b91506113e682611b93565b602082019050919050565b60006113fe602b836116eb565b915061140982611bbc565b604082019050919050565b6000611421602a836116eb565b915061142c82611c0b565b604082019050919050565b6000611444601f836116eb565b915061144f82611c5a565b602082019050919050565b61146381611936565b82525050565b61147281611940565b82525050565b6000611484828461124c565b915081905092915050565b600061149a82611388565b9150819050919050565b60006020820190506114b9600083018461123d565b92915050565b60006060820190506114d4600083018661123d565b6114e1602083018561123d565b6114ee604083018461145a565b949350505050565b600060408201905061150b600083018561123d565b611518602083018461145a565b9392505050565b60006020820190508181036000830152611539818461127d565b905092915050565b6000602082019050818103600083015261155a816112b6565b9050919050565b6000602082019050818103600083015261157a816112d9565b9050919050565b6000602082019050818103600083015261159a816112fc565b9050919050565b600060208201905081810360008301526115ba8161131f565b9050919050565b600060208201905081810360008301526115da81611342565b9050919050565b600060208201905081810360008301526115fa81611365565b9050919050565b6000602082019050818103600083015261161a816113ab565b9050919050565b6000602082019050818103600083015261163a816113ce565b9050919050565b6000602082019050818103600083015261165a816113f1565b9050919050565b6000602082019050818103600083015261167a81611414565b9050919050565b6000602082019050818103600083015261169a81611437565b9050919050565b60006040820190506116b6600083018561145a565b6116c36020830184611469565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061170782611936565b915061171283611936565b925082611722576117216119b2565b5b828204905092915050565b6000808291508390505b60018511156117775780860481111561175357611752611983565b5b60018516156117625780820291505b8081029050611770856119f2565b9450611737565b94509492505050565b600061178b82611936565b915061179683611940565b92506117c37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846117cb565b905092915050565b6000826117db5760019050611897565b816117e95760009050611897565b81600181146117ff576002811461180957611838565b6001915050611897565b60ff84111561181b5761181a611983565b5b8360020a91508482111561183257611831611983565b5b50611897565b5060208310610133831016604e8410600b841016171561186d5782820a90508381111561186857611867611983565b5b611897565b61187a848484600161172d565b9250905081840481111561189157611890611983565b5b81810290505b9392505050565b60006118a982611936565b91506118b483611936565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156118ed576118ec611983565b5b828202905092915050565b600061190382611916565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60005b8381101561196e578082015181840152602081019050611953565b8381111561197d576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f68617665206e6f74207365742072617465000000000000000000000000000000600082015250565b7f7472616e7366657220696e636f6d6520746f6b656e206661696c656400000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b50565b7f7472616e73666572206f7574636f6d6520746f6b656e206661696c6564000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f43616e206e6f74207472616e73666572207468652073616d6520746f6b656e00600082015250565b611c8c816118f8565b8114611c9757600080fd5b50565b611ca38161190a565b8114611cae57600080fd5b50565b611cba81611936565b8114611cc557600080fd5b50565b611cd181611940565b8114611cdc57600080fd5b5056fea26469706673582212201547ca73af5d60c7bd4d43048ca9778afe4c6a137eb4d7ca876fb7a9b4a97f5364736f6c63430008040033";

type SwapTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapToken__factory extends ContractFactory {
  constructor(...args: SwapTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapToken> {
    return super.deploy(overrides || {}) as Promise<SwapToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapToken {
    return super.attach(address) as SwapToken;
  }
  connect(signer: Signer): SwapToken__factory {
    return super.connect(signer) as SwapToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapTokenInterface {
    return new utils.Interface(_abi) as SwapTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapToken {
    return new Contract(address, _abi, signerOrProvider) as SwapToken;
  }
}
