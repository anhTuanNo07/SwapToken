/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapToken, SwapTokenInterface } from "../SwapToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "approveSendEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "etherAllowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_decimal",
        type: "uint32",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_transferAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount1",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenToRate",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "decimal",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005257600080fd5b5061006f61006461007460201b60201c565b61007c60201b60201c565b610140565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6120db80620001506000396000f3fe60806040526004361061009c5760003560e01c8063722713f711610064578063722713f7146101455780638da5cb5b14610170578063a9678a181461019b578063e1758bd8146101c4578063f2fde38b146101ef578063fbf583fe146102185761009c565b806306be2158146100a15780632e1a7d4d146100ca578063341e759d146100e65780635dec1b9014610124578063715018a61461012e575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190611575565b610255565b005b6100e460048036038101906100df91906115ed565b61037e565b005b3480156100f257600080fd5b5061010d600480360381019061010891906114e9565b61053e565b60405161011b929190611a52565b60405180910390f35b61012c610572565b005b34801561013a57600080fd5b50610143610602565b005b34801561015157600080fd5b5061015a61068a565b6040516101679190611a37565b60405180910390f35b34801561017c57600080fd5b50610185610692565b604051610192919061185a565b60405180910390f35b3480156101a757600080fd5b506101c260048036038101906101bd9190611512565b6106bb565b005b3480156101d057600080fd5b506101d961091a565b6040516101e6919061185a565b60405180910390f35b3480156101fb57600080fd5b50610216600480360381019061021191906114e9565b610940565b005b34801561022457600080fd5b5061023f600480360381019061023a91906114e9565b610a38565b60405161024c9190611a37565b60405180910390f35b61025d610a50565b73ffffffffffffffffffffffffffffffffffffffff1661027b610692565b73ffffffffffffffffffffffffffffffffffffffff16146102d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c890611957565b60405180910390fd5b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548163ffffffff021916908363ffffffff160217905550505050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115610400576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f7906119b7565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461044b9190611cff565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516104b490611845565b60006040518083038185875af1925050503d80600081146104f1576040519150601f19603f3d011682016040523d82523d6000602084013e6104f6565b606091505b505090508061053a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053190611997565b60405180910390fd5b5050565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900463ffffffff16905082565b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105bd9190611aad565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b61060a610a50565b73ffffffffffffffffffffffffffffffffffffffff16610628610692565b73ffffffffffffffffffffffffffffffffffffffff161461067e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067590611957565b60405180910390fd5b6106886000610a58565b565b600047905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b82826000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415801561075357506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414155b610792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078990611917565b60405180910390fd5b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900463ffffffff16600a6107f39190611b87565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546108409190611ca5565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900463ffffffff16600a61089f9190611b87565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154866108ed9190611ca5565b6108f79190611ca5565b6109019190611b03565b9050610911338888888886610b1c565b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610948610a50565b73ffffffffffffffffffffffffffffffffffffffff16610966610692565b73ffffffffffffffffffffffffffffffffffffffff16146109bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b390611957565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a23906118f7565b60405180910390fd5b610a3581610a58565b50565b60036020528060005260406000206000915090505481565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600084905060008490508773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b8b57508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610bca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc190611a17565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610dca5760008773ffffffffffffffffffffffffffffffffffffffff1685604051610c4690611845565b60006040518083038185875af1925050503d8060008114610c83576040519150601f19603f3d011682016040523d82523d6000602084013e610c88565b606091505b5050905080610ccc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc390611997565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610d3457610d2c888a868573ffffffffffffffffffffffffffffffffffffffff1661119f909392919063ffffffff16565b505050611197565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8a866040518363ffffffff1660e01b8152600401610d6f9291906118ac565b602060405180830381600087803b158015610d8957600080fd5b505af1158015610d9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc191906115c4565b50505050611197565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561104557610e4d8888868573ffffffffffffffffffffffffffffffffffffffff1661119f909392919063ffffffff16565b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610f915782600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610f02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef990611977565b60405180910390fd5b82600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f4d9190611cff565b600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008873ffffffffffffffffffffffffffffffffffffffff1684604051610fb790611845565b60006040518083038185875af1925050503d8060008114610ff4576040519150601f19603f3d011682016040523d82523d6000602084013e610ff9565b606091505b505090508061103d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103490611997565b60405180910390fd5b505050611197565b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146110d9576110a58888868573ffffffffffffffffffffffffffffffffffffffff1661119f909392919063ffffffff16565b6110d28789858473ffffffffffffffffffffffffffffffffffffffff1661119f909392919063ffffffff16565b5050611197565b6111068888868573ffffffffffffffffffffffffffffffffffffffff1661119f909392919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb89856040518363ffffffff1660e01b81526004016111419291906118ac565b602060405180830381600087803b15801561115b57600080fd5b505af115801561116f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119391906115c4565b5050505b505050505050565b611222846323b872dd60e01b8585856040516024016111c093929190611875565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611228565b50505050565b600061128a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166112ef9092919063ffffffff16565b90506000815111156112ea57808060200190518101906112aa91906115c4565b6112e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e0906119f7565b60405180910390fd5b5b505050565b60606112fe8484600085611307565b90509392505050565b60608247101561134c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134390611937565b60405180910390fd5b6113558561141b565b611394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138b906119d7565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516113bd919061182e565b60006040518083038185875af1925050503d80600081146113fa576040519150601f19603f3d011682016040523d82523d6000602084013e6113ff565b606091505b509150915061140f82828661142e565b92505050949350505050565b600080823b905060008111915050919050565b6060831561143e5782905061148e565b6000835111156114515782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148591906118d5565b60405180910390fd5b9392505050565b6000813590506114a481612049565b92915050565b6000815190506114b981612060565b92915050565b6000813590506114ce81612077565b92915050565b6000813590506114e38161208e565b92915050565b6000602082840312156114fb57600080fd5b600061150984828501611495565b91505092915050565b6000806000806080858703121561152857600080fd5b600061153687828801611495565b945050602061154787828801611495565b935050604061155887828801611495565b9250506060611569878288016114bf565b91505092959194509250565b60008060006060848603121561158a57600080fd5b600061159886828701611495565b93505060206115a9868287016114bf565b92505060406115ba868287016114d4565b9150509250925092565b6000602082840312156115d657600080fd5b60006115e4848285016114aa565b91505092915050565b6000602082840312156115ff57600080fd5b600061160d848285016114bf565b91505092915050565b61161f81611d33565b82525050565b600061163082611a7b565b61163a8185611a91565b935061164a818560208601611d8b565b80840191505092915050565b600061166182611a86565b61166b8185611a9c565b935061167b818560208601611d8b565b61168481611e1c565b840191505092915050565b600061169c602683611a9c565b91506116a782611e3a565b604082019050919050565b60006116bf601183611a9c565b91506116ca82611e89565b602082019050919050565b60006116e2602683611a9c565b91506116ed82611eb2565b604082019050919050565b6000611705602083611a9c565b915061171082611f01565b602082019050919050565b6000611728601483611a9c565b915061173382611f2a565b602082019050919050565b600061174b601883611a9c565b915061175682611f53565b602082019050919050565b600061176e601083611a9c565b915061177982611f7c565b602082019050919050565b6000611791600083611a91565b915061179c82611fa5565b600082019050919050565b60006117b4601d83611a9c565b91506117bf82611fa8565b602082019050919050565b60006117d7602a83611a9c565b91506117e282611fd1565b604082019050919050565b60006117fa600e83611a9c565b915061180582612020565b602082019050919050565b61181981611d71565b82525050565b61182881611d7b565b82525050565b600061183a8284611625565b915081905092915050565b600061185082611784565b9150819050919050565b600060208201905061186f6000830184611616565b92915050565b600060608201905061188a6000830186611616565b6118976020830185611616565b6118a46040830184611810565b949350505050565b60006040820190506118c16000830185611616565b6118ce6020830184611810565b9392505050565b600060208201905081810360008301526118ef8184611656565b905092915050565b600060208201905081810360008301526119108161168f565b9050919050565b60006020820190508181036000830152611930816116b2565b9050919050565b60006020820190508181036000830152611950816116d5565b9050919050565b60006020820190508181036000830152611970816116f8565b9050919050565b600060208201905081810360008301526119908161171b565b9050919050565b600060208201905081810360008301526119b08161173e565b9050919050565b600060208201905081810360008301526119d081611761565b9050919050565b600060208201905081810360008301526119f0816117a7565b9050919050565b60006020820190508181036000830152611a10816117ca565b9050919050565b60006020820190508181036000830152611a30816117ed565b9050919050565b6000602082019050611a4c6000830184611810565b92915050565b6000604082019050611a676000830185611810565b611a74602083018461181f565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611ab882611d71565b9150611ac383611d71565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611af857611af7611dbe565b5b828201905092915050565b6000611b0e82611d71565b9150611b1983611d71565b925082611b2957611b28611ded565b5b828204905092915050565b6000808291508390505b6001851115611b7e57808604811115611b5a57611b59611dbe565b5b6001851615611b695780820291505b8081029050611b7785611e2d565b9450611b3e565b94509492505050565b6000611b9282611d71565b9150611b9d83611d7b565b9250611bca7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611bd2565b905092915050565b600082611be25760019050611c9e565b81611bf05760009050611c9e565b8160018114611c065760028114611c1057611c3f565b6001915050611c9e565b60ff841115611c2257611c21611dbe565b5b8360020a915084821115611c3957611c38611dbe565b5b50611c9e565b5060208310610133831016604e8410600b8410161715611c745782820a905083811115611c6f57611c6e611dbe565b5b611c9e565b611c818484846001611b34565b92509050818404811115611c9857611c97611dbe565b5b81810290505b9392505050565b6000611cb082611d71565b9150611cbb83611d71565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611cf457611cf3611dbe565b5b828202905092915050565b6000611d0a82611d71565b9150611d1583611d71565b925082821015611d2857611d27611dbe565b5b828203905092915050565b6000611d3e82611d51565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60005b83811015611da9578082015181840152602081019050611d8e565b83811115611db8576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f68617665206e6f74207365742072617465000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6e6f7420656e6f75676820616c6c6f77616e6365000000000000000000000000600082015250565b7f6661696c656420746f207472616e7366657220746f6b656e0000000000000000600082015250565b7f65786365656420616c6c6f77616e636500000000000000000000000000000000600082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b61205281611d33565b811461205d57600080fd5b50565b61206981611d45565b811461207457600080fd5b50565b61208081611d71565b811461208b57600080fd5b50565b61209781611d7b565b81146120a257600080fd5b5056fea2646970667358221220a9a04ee81295bef969bbaca60067af1cbf779443675d156b337f6ea5287ec9c164736f6c63430008040033";

type SwapTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapToken__factory extends ContractFactory {
  constructor(...args: SwapTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapToken> {
    return super.deploy(overrides || {}) as Promise<SwapToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapToken {
    return super.attach(address) as SwapToken;
  }
  connect(signer: Signer): SwapToken__factory {
    return super.connect(signer) as SwapToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapTokenInterface {
    return new utils.Interface(_abi) as SwapTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapToken {
    return new Contract(address, _abi, signerOrProvider) as SwapToken;
  }
}
