/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapToken, SwapTokenInterface } from "../SwapToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [],
    name: "__Swap_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "etherDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_decimal",
        type: "uint32",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount1",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenToRate",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "decimal",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d98806100206000396000f3fe60806040526004361061008a5760003560e01c8063715018a611610059578063715018a6146101695780638da5cb5b14610180578063df791e50146101ab578063e1f71934146101d4578063f2fde38b14610211576100ca565b806306be2158146100cf5780632e1a7d4d146100f8578063341e759d1461011457806339cda63a14610152576100ca565b366100ca577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587433346040516100c09291906115f0565b60405180910390a1005b600080fd5b3480156100db57600080fd5b506100f660048036038101906100f191906112dc565b61023a565b005b610112600480360381019061010d9190611354565b610363565b005b34801561012057600080fd5b5061013b60048036038101906101369190611264565b61048f565b604051610149929190611776565b60405180910390f35b34801561015e57600080fd5b506101676104c3565b005b34801561017557600080fd5b5061017e6105af565b005b34801561018c57600080fd5b50610195610637565b6040516101a2919061159e565b60405180910390f35b3480156101b757600080fd5b506101d260048036038101906101cd919061128d565b610661565b005b3480156101e057600080fd5b506101fb60048036038101906101f69190611264565b6108bd565b604051610208919061175b565b60405180910390f35b34801561021d57600080fd5b5061023860048036038101906102339190611264565b6108d5565b005b6102426109cd565b73ffffffffffffffffffffffffffffffffffffffff16610260610637565b73ffffffffffffffffffffffffffffffffffffffff16146102b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ad906116bb565b60405180910390fd5b81606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548163ffffffff021916908363ffffffff160217905550505050565b61036b6109cd565b73ffffffffffffffffffffffffffffffffffffffff16610389610637565b73ffffffffffffffffffffffffffffffffffffffff16146103df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d6906116bb565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff168260405161040590611589565b60006040518083038185875af1925050503d8060008114610442576040519150601f19603f3d011682016040523d82523d6000602084013e610447565b606091505b505090508061048b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610482906116db565b60405180910390fd5b5050565b60656020528060005260406000206000915090508060000154908060010160009054906101000a900463ffffffff16905082565b600060019054906101000a900460ff166104eb5760008054906101000a900460ff16156104f4565b6104f36109d5565b5b610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052a9061169b565b60405180910390fd5b60008060019054906101000a900460ff161590508015610583576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61058b6109e6565b80156105ac5760008060016101000a81548160ff0219169083151502179055505b50565b6105b76109cd565b73ffffffffffffffffffffffffffffffffffffffff166105d5610637565b73ffffffffffffffffffffffffffffffffffffffff161461062b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610622906116bb565b60405180910390fd5b6106356000610a47565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b82826000606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141580156106f957506000606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414155b610738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072f9061165b565b60405180910390fd5b6000606560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900463ffffffff16600a6107999190611855565b606560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546107e69190611973565b606560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900463ffffffff16600a6108459190611855565b606560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154866108939190611973565b61089d9190611973565b6108a791906117d1565b90506108b586868684610b0d565b505050505050565b60666020528060005260406000206000915090505481565b6108dd6109cd565b73ffffffffffffffffffffffffffffffffffffffff166108fb610637565b73ffffffffffffffffffffffffffffffffffffffff1614610951576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610948906116bb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b89061163b565b60405180910390fd5b6109ca81610a47565b50565b600033905090565b60006109e030610e68565b15905090565b600060019054906101000a900460ff16610a35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2c9061171b565b60405180910390fd5b610a3d610e7b565b610a45610ecc565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008490506000849050600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610c8e5760003073ffffffffffffffffffffffffffffffffffffffff1685604051610b7290611589565b60006040518083038185875af1925050503d8060008114610baf576040519150601f19603f3d011682016040523d82523d6000602084013e610bb4565b606091505b5050905080610bf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bef906116db565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610c339291906115f0565b602060405180830381600087803b158015610c4d57600080fd5b505af1158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c85919061132b565b50505050610e62565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610da457610cf03330868573ffffffffffffffffffffffffffffffffffffffff16610f2d909392919063ffffffff16565b60003373ffffffffffffffffffffffffffffffffffffffff1684604051610d1690611589565b60006040518083038185875af1925050503d8060008114610d53576040519150601f19603f3d011682016040523d82523d6000602084013e610d58565b606091505b5050905080610d9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d93906116db565b60405180910390fd5b505050610e62565b610dd13330868573ffffffffffffffffffffffffffffffffffffffff16610f2d909392919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610e0c9291906115f0565b602060405180830381600087803b158015610e2657600080fd5b505af1158015610e3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5e919061132b565b5050505b50505050565b600080823b905060008111915050919050565b600060019054906101000a900460ff16610eca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec19061171b565b60405180910390fd5b565b600060019054906101000a900460ff16610f1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f129061171b565b60405180910390fd5b610f2b610f266109cd565b610a47565b565b610fb0846323b872dd60e01b858585604051602401610f4e939291906115b9565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fb6565b50505050565b6000611018826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661107d9092919063ffffffff16565b90506000815111156110785780806020019051810190611038919061132b565b611077576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106e9061173b565b60405180910390fd5b5b505050565b606061108c8484600085611095565b90509392505050565b6060824710156110da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d19061167b565b60405180910390fd5b6110e385610e68565b611122576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611119906116fb565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161114b9190611572565b60006040518083038185875af1925050503d8060008114611188576040519150601f19603f3d011682016040523d82523d6000602084013e61118d565b606091505b509150915061119d8282866111a9565b92505050949350505050565b606083156111b957829050611209565b6000835111156111cc5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112009190611619565b60405180910390fd5b9392505050565b60008135905061121f81611d06565b92915050565b60008151905061123481611d1d565b92915050565b60008135905061124981611d34565b92915050565b60008135905061125e81611d4b565b92915050565b60006020828403121561127657600080fd5b600061128484828501611210565b91505092915050565b6000806000606084860312156112a257600080fd5b60006112b086828701611210565b93505060206112c186828701611210565b92505060406112d28682870161123a565b9150509250925092565b6000806000606084860312156112f157600080fd5b60006112ff86828701611210565b93505060206113108682870161123a565b92505060406113218682870161124f565b9150509250925092565b60006020828403121561133d57600080fd5b600061134b84828501611225565b91505092915050565b60006020828403121561136657600080fd5b60006113748482850161123a565b91505092915050565b611386816119cd565b82525050565b60006113978261179f565b6113a181856117b5565b93506113b1818560208601611a25565b80840191505092915050565b60006113c8826117aa565b6113d281856117c0565b93506113e2818560208601611a25565b6113eb81611ab6565b840191505092915050565b60006114036026836117c0565b915061140e82611ad4565b604082019050919050565b60006114266011836117c0565b915061143182611b23565b602082019050919050565b60006114496026836117c0565b915061145482611b4c565b604082019050919050565b600061146c602e836117c0565b915061147782611b9b565b604082019050919050565b600061148f6020836117c0565b915061149a82611bea565b602082019050919050565b60006114b26018836117c0565b91506114bd82611c13565b602082019050919050565b60006114d56000836117b5565b91506114e082611c3c565b600082019050919050565b60006114f8601d836117c0565b915061150382611c3f565b602082019050919050565b600061151b602b836117c0565b915061152682611c68565b604082019050919050565b600061153e602a836117c0565b915061154982611cb7565b604082019050919050565b61155d81611a0b565b82525050565b61156c81611a15565b82525050565b600061157e828461138c565b915081905092915050565b6000611594826114c8565b9150819050919050565b60006020820190506115b3600083018461137d565b92915050565b60006060820190506115ce600083018661137d565b6115db602083018561137d565b6115e86040830184611554565b949350505050565b6000604082019050611605600083018561137d565b6116126020830184611554565b9392505050565b6000602082019050818103600083015261163381846113bd565b905092915050565b60006020820190508181036000830152611654816113f6565b9050919050565b6000602082019050818103600083015261167481611419565b9050919050565b600060208201905081810360008301526116948161143c565b9050919050565b600060208201905081810360008301526116b48161145f565b9050919050565b600060208201905081810360008301526116d481611482565b9050919050565b600060208201905081810360008301526116f4816114a5565b9050919050565b60006020820190508181036000830152611714816114eb565b9050919050565b600060208201905081810360008301526117348161150e565b9050919050565b6000602082019050818103600083015261175481611531565b9050919050565b60006020820190506117706000830184611554565b92915050565b600060408201905061178b6000830185611554565b6117986020830184611563565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006117dc82611a0b565b91506117e783611a0b565b9250826117f7576117f6611a87565b5b828204905092915050565b6000808291508390505b600185111561184c5780860481111561182857611827611a58565b5b60018516156118375780820291505b808102905061184585611ac7565b945061180c565b94509492505050565b600061186082611a0b565b915061186b83611a15565b92506118987fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846118a0565b905092915050565b6000826118b0576001905061196c565b816118be576000905061196c565b81600181146118d457600281146118de5761190d565b600191505061196c565b60ff8411156118f0576118ef611a58565b5b8360020a91508482111561190757611906611a58565b5b5061196c565b5060208310610133831016604e8410600b84101617156119425782820a90508381111561193d5761193c611a58565b5b61196c565b61194f8484846001611802565b9250905081840481111561196657611965611a58565b5b81810290505b9392505050565b600061197e82611a0b565b915061198983611a0b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156119c2576119c1611a58565b5b828202905092915050565b60006119d8826119eb565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60005b83811015611a43578082015181840152602081019050611a28565b83811115611a52576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f68617665206e6f74207365742072617465000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6661696c656420746f207472616e7366657220746f6b656e0000000000000000600082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b611d0f816119cd565b8114611d1a57600080fd5b50565b611d26816119df565b8114611d3157600080fd5b50565b611d3d81611a0b565b8114611d4857600080fd5b50565b611d5481611a15565b8114611d5f57600080fd5b5056fea264697066735822122020b1c0c0febacd9bcf2ecfb88abe277d0678223005b0c9d160849456b30a015464736f6c63430008040033";

type SwapTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapToken__factory extends ContractFactory {
  constructor(...args: SwapTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapToken> {
    return super.deploy(overrides || {}) as Promise<SwapToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapToken {
    return super.attach(address) as SwapToken;
  }
  connect(signer: Signer): SwapToken__factory {
    return super.connect(signer) as SwapToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapTokenInterface {
    return new utils.Interface(_abi) as SwapTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapToken {
    return new Contract(address, _abi, signerOrProvider) as SwapToken;
  }
}
