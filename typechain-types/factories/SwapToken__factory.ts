/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapToken, SwapTokenInterface } from "../SwapToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "etherAllowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_decimal",
        type: "uint32",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount1",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenToRate",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "decimal",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005257600080fd5b5061006f61006461007460201b60201c565b61007c60201b60201c565b610140565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611add8061014f6000396000f3fe60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b14610169578063df791e5014610194578063e1758bd8146101bd578063f2fde38b146101e8578063fbf583fe14610211576100ca565b806306be2158146100cf5780632e1a7d4d146100f8578063341e759d14610114578063715018a614610152576100ca565b366100ca577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587433346040516100c0929190611413565b60405180910390a1005b600080fd5b3480156100db57600080fd5b506100f660048036038101906100f19190611145565b61024e565b005b610112600480360381019061010d91906111bd565b610377565b005b34801561012057600080fd5b5061013b600480360381019061013691906110cd565b6104a3565b604051610149929190611559565b60405180910390f35b34801561015e57600080fd5b506101676104d7565b005b34801561017557600080fd5b5061017e61055f565b60405161018b91906113c1565b60405180910390f35b3480156101a057600080fd5b506101bb60048036038101906101b691906110f6565b610588565b005b3480156101c957600080fd5b506101d26107e4565b6040516101df91906113c1565b60405180910390f35b3480156101f457600080fd5b5061020f600480360381019061020a91906110cd565b61080a565b005b34801561021d57600080fd5b50610238600480360381019061023391906110cd565b610902565b604051610245919061153e565b60405180910390f35b61025661091a565b73ffffffffffffffffffffffffffffffffffffffff1661027461055f565b73ffffffffffffffffffffffffffffffffffffffff16146102ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c1906114be565b60405180910390fd5b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548163ffffffff021916908363ffffffff160217905550505050565b61037f61091a565b73ffffffffffffffffffffffffffffffffffffffff1661039d61055f565b73ffffffffffffffffffffffffffffffffffffffff16146103f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ea906114be565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff1682604051610419906113ac565b60006040518083038185875af1925050503d8060008114610456576040519150601f19603f3d011682016040523d82523d6000602084013e61045b565b606091505b505090508061049f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610496906114de565b60405180910390fd5b5050565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900463ffffffff16905082565b6104df61091a565b73ffffffffffffffffffffffffffffffffffffffff166104fd61055f565b73ffffffffffffffffffffffffffffffffffffffff1614610553576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054a906114be565b60405180910390fd5b61055d6000610922565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b82826000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415801561062057506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414155b61065f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106569061147e565b60405180910390fd5b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900463ffffffff16600a6106c09190611638565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461070d9190611756565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900463ffffffff16600a61076c9190611638565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154866107ba9190611756565b6107c49190611756565b6107ce91906115b4565b90506107dc868686846109e6565b505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61081261091a565b73ffffffffffffffffffffffffffffffffffffffff1661083061055f565b73ffffffffffffffffffffffffffffffffffffffff1614610886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087d906114be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed9061145e565b60405180910390fd5b6108ff81610922565b50565b60036020528060005260406000206000915090505481565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008490506000849050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610b885760003073ffffffffffffffffffffffffffffffffffffffff1685604051610a6c906113ac565b60006040518083038185875af1925050503d8060008114610aa9576040519150601f19603f3d011682016040523d82523d6000602084013e610aae565b606091505b5050905080610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae9906114de565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610b2d929190611413565b602060405180830381600087803b158015610b4757600080fd5b505af1158015610b5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7f9190611194565b50505050610d7d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610cbf57610c0b3330868573ffffffffffffffffffffffffffffffffffffffff16610d83909392919063ffffffff16565b60003373ffffffffffffffffffffffffffffffffffffffff1684604051610c31906113ac565b60006040518083038185875af1925050503d8060008114610c6e576040519150601f19603f3d011682016040523d82523d6000602084013e610c73565b606091505b5050905080610cb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cae906114de565b60405180910390fd5b505050610d7d565b610cec3330868573ffffffffffffffffffffffffffffffffffffffff16610d83909392919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610d27929190611413565b602060405180830381600087803b158015610d4157600080fd5b505af1158015610d55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d799190611194565b5050505b50505050565b610e06846323b872dd60e01b858585604051602401610da4939291906113dc565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610e0c565b50505050565b6000610e6e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610ed39092919063ffffffff16565b9050600081511115610ece5780806020019051810190610e8e9190611194565b610ecd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec49061151e565b60405180910390fd5b5b505050565b6060610ee28484600085610eeb565b90509392505050565b606082471015610f30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f279061149e565b60405180910390fd5b610f3985610fff565b610f78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6f906114fe565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610fa19190611395565b60006040518083038185875af1925050503d8060008114610fde576040519150601f19603f3d011682016040523d82523d6000602084013e610fe3565b606091505b5091509150610ff3828286611012565b92505050949350505050565b600080823b905060008111915050919050565b6060831561102257829050611072565b6000835111156110355782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611069919061143c565b60405180910390fd5b9392505050565b60008135905061108881611a4b565b92915050565b60008151905061109d81611a62565b92915050565b6000813590506110b281611a79565b92915050565b6000813590506110c781611a90565b92915050565b6000602082840312156110df57600080fd5b60006110ed84828501611079565b91505092915050565b60008060006060848603121561110b57600080fd5b600061111986828701611079565b935050602061112a86828701611079565b925050604061113b868287016110a3565b9150509250925092565b60008060006060848603121561115a57600080fd5b600061116886828701611079565b9350506020611179868287016110a3565b925050604061118a868287016110b8565b9150509250925092565b6000602082840312156111a657600080fd5b60006111b48482850161108e565b91505092915050565b6000602082840312156111cf57600080fd5b60006111dd848285016110a3565b91505092915050565b6111ef816117b0565b82525050565b600061120082611582565b61120a8185611598565b935061121a818560208601611808565b80840191505092915050565b60006112318261158d565b61123b81856115a3565b935061124b818560208601611808565b61125481611899565b840191505092915050565b600061126c6026836115a3565b9150611277826118b7565b604082019050919050565b600061128f6011836115a3565b915061129a82611906565b602082019050919050565b60006112b26026836115a3565b91506112bd8261192f565b604082019050919050565b60006112d56020836115a3565b91506112e08261197e565b602082019050919050565b60006112f86018836115a3565b9150611303826119a7565b602082019050919050565b600061131b600083611598565b9150611326826119d0565b600082019050919050565b600061133e601d836115a3565b9150611349826119d3565b602082019050919050565b6000611361602a836115a3565b915061136c826119fc565b604082019050919050565b611380816117ee565b82525050565b61138f816117f8565b82525050565b60006113a182846111f5565b915081905092915050565b60006113b78261130e565b9150819050919050565b60006020820190506113d660008301846111e6565b92915050565b60006060820190506113f160008301866111e6565b6113fe60208301856111e6565b61140b6040830184611377565b949350505050565b600060408201905061142860008301856111e6565b6114356020830184611377565b9392505050565b600060208201905081810360008301526114568184611226565b905092915050565b600060208201905081810360008301526114778161125f565b9050919050565b6000602082019050818103600083015261149781611282565b9050919050565b600060208201905081810360008301526114b7816112a5565b9050919050565b600060208201905081810360008301526114d7816112c8565b9050919050565b600060208201905081810360008301526114f7816112eb565b9050919050565b6000602082019050818103600083015261151781611331565b9050919050565b6000602082019050818103600083015261153781611354565b9050919050565b60006020820190506115536000830184611377565b92915050565b600060408201905061156e6000830185611377565b61157b6020830184611386565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006115bf826117ee565b91506115ca836117ee565b9250826115da576115d961186a565b5b828204905092915050565b6000808291508390505b600185111561162f5780860481111561160b5761160a61183b565b5b600185161561161a5780820291505b8081029050611628856118aa565b94506115ef565b94509492505050565b6000611643826117ee565b915061164e836117f8565b925061167b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611683565b905092915050565b600082611693576001905061174f565b816116a1576000905061174f565b81600181146116b757600281146116c1576116f0565b600191505061174f565b60ff8411156116d3576116d261183b565b5b8360020a9150848211156116ea576116e961183b565b5b5061174f565b5060208310610133831016604e8410600b84101617156117255782820a9050838111156117205761171f61183b565b5b61174f565b61173284848460016115e5565b925090508184048111156117495761174861183b565b5b81810290505b9392505050565b6000611761826117ee565b915061176c836117ee565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117a5576117a461183b565b5b828202905092915050565b60006117bb826117ce565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60005b8381101561182657808201518184015260208101905061180b565b83811115611835576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f68617665206e6f74207365742072617465000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6661696c656420746f207472616e7366657220746f6b656e0000000000000000600082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b611a54816117b0565b8114611a5f57600080fd5b50565b611a6b816117c2565b8114611a7657600080fd5b50565b611a82816117ee565b8114611a8d57600080fd5b50565b611a99816117f8565b8114611aa457600080fd5b5056fea2646970667358221220d89930fdb8b42fae06892d6a13a7142020856e6950091c390cb19a1abf4e897c64736f6c63430008040033";

type SwapTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapToken__factory extends ContractFactory {
  constructor(...args: SwapTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapToken> {
    return super.deploy(overrides || {}) as Promise<SwapToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapToken {
    return super.attach(address) as SwapToken;
  }
  connect(signer: Signer): SwapToken__factory {
    return super.connect(signer) as SwapToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapTokenInterface {
    return new utils.Interface(_abi) as SwapTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapToken {
    return new Contract(address, _abi, signerOrProvider) as SwapToken;
  }
}
