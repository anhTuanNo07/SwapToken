/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapToken, SwapTokenInterface } from "../SwapToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "approveSendEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "etherAllowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_decimal",
        type: "uint32",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_transferAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount1",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenToRate",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "decimal",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005257600080fd5b5061006f61006461007460201b60201c565b61007c60201b60201c565b610140565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6121cc80620001506000396000f3fe60806040526004361061009c5760003560e01c8063722713f711610064578063722713f7146101455780638da5cb5b14610170578063a9678a181461019b578063e1758bd8146101c4578063f2fde38b146101ef578063fbf583fe146102185761009c565b806306be2158146100a15780632e1a7d4d146100ca578063341e759d146100e65780635dec1b9014610124578063715018a61461012e575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c391906115fa565b610255565b005b6100e460048036038101906100df9190611672565b610403565b005b3480156100f257600080fd5b5061010d6004803603810190610108919061156e565b6105c3565b60405161011b929190611b1a565b60405180910390f35b61012c6105f7565b005b34801561013a57600080fd5b50610143610687565b005b34801561015157600080fd5b5061015a61070f565b6040516101679190611aff565b60405180910390f35b34801561017c57600080fd5b50610185610717565b6040516101929190611902565b60405180910390f35b3480156101a757600080fd5b506101c260048036038101906101bd9190611597565b610740565b005b3480156101d057600080fd5b506101d961099f565b6040516101e69190611902565b60405180910390f35b3480156101fb57600080fd5b506102166004803603810190610211919061156e565b6109c5565b005b34801561022457600080fd5b5061023f600480360381019061023a919061156e565b610abd565b60405161024c9190611aff565b60405180910390f35b61025d610ad5565b73ffffffffffffffffffffffffffffffffffffffff1661027b610717565b73ffffffffffffffffffffffffffffffffffffffff16146102d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c8906119ff565b60405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034d90611a1f565b60405180910390fd5b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548163ffffffff021916908363ffffffff160217905550505050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115610485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047c90611a7f565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104d09190611dc7565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610539906118ed565b60006040518083038185875af1925050503d8060008114610576576040519150601f19603f3d011682016040523d82523d6000602084013e61057b565b606091505b50509050806105bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b690611a5f565b60405180910390fd5b5050565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900463ffffffff16905082565b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106429190611b75565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b61068f610ad5565b73ffffffffffffffffffffffffffffffffffffffff166106ad610717565b73ffffffffffffffffffffffffffffffffffffffff1614610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa906119ff565b60405180910390fd5b61070d6000610add565b565b600047905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b82826000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141580156107d857506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414155b610817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080e906119bf565b60405180910390fd5b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900463ffffffff16600a6108789190611c4f565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546108c59190611d6d565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900463ffffffff16600a6109249190611c4f565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154866109729190611d6d565b61097c9190611d6d565b6109869190611bcb565b9050610996338888888886610ba1565b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109cd610ad5565b73ffffffffffffffffffffffffffffffffffffffff166109eb610717565b73ffffffffffffffffffffffffffffffffffffffff1614610a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a38906119ff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ab1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa89061199f565b60405180910390fd5b610aba81610add565b50565b60036020528060005260406000206000915090505481565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600084905060008490508773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c1057508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610c4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4690611adf565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610e4f5760008773ffffffffffffffffffffffffffffffffffffffff1685604051610ccb906118ed565b60006040518083038185875af1925050503d8060008114610d08576040519150601f19603f3d011682016040523d82523d6000602084013e610d0d565b606091505b5050905080610d51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4890611a5f565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610db957610db1888a868573ffffffffffffffffffffffffffffffffffffffff16611224909392919063ffffffff16565b50505061121c565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8a866040518363ffffffff1660e01b8152600401610df4929190611954565b602060405180830381600087803b158015610e0e57600080fd5b505af1158015610e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e469190611649565b5050505061121c565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156110ca57610ed28888868573ffffffffffffffffffffffffffffffffffffffff16611224909392919063ffffffff16565b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146110165782600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610f87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7e90611a3f565b60405180910390fd5b82600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd29190611dc7565b600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008873ffffffffffffffffffffffffffffffffffffffff168460405161103c906118ed565b60006040518083038185875af1925050503d8060008114611079576040519150601f19603f3d011682016040523d82523d6000602084013e61107e565b606091505b50509050806110c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b990611a5f565b60405180910390fd5b50505061121c565b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461115e5761112a8888868573ffffffffffffffffffffffffffffffffffffffff16611224909392919063ffffffff16565b6111578789858473ffffffffffffffffffffffffffffffffffffffff16611224909392919063ffffffff16565b505061121c565b61118b8888868573ffffffffffffffffffffffffffffffffffffffff16611224909392919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb89856040518363ffffffff1660e01b81526004016111c6929190611954565b602060405180830381600087803b1580156111e057600080fd5b505af11580156111f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112189190611649565b5050505b505050505050565b6112a7846323b872dd60e01b8585856040516024016112459392919061191d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112ad565b50505050565b600061130f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113749092919063ffffffff16565b905060008151111561136f578080602001905181019061132f9190611649565b61136e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136590611abf565b60405180910390fd5b5b505050565b6060611383848460008561138c565b90509392505050565b6060824710156113d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c8906119df565b60405180910390fd5b6113da856114a0565b611419576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141090611a9f565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161144291906118d6565b60006040518083038185875af1925050503d806000811461147f576040519150601f19603f3d011682016040523d82523d6000602084013e611484565b606091505b50915091506114948282866114b3565b92505050949350505050565b600080823b905060008111915050919050565b606083156114c357829050611513565b6000835111156114d65782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150a919061197d565b60405180910390fd5b9392505050565b6000813590506115298161213a565b92915050565b60008151905061153e81612151565b92915050565b60008135905061155381612168565b92915050565b6000813590506115688161217f565b92915050565b60006020828403121561158057600080fd5b600061158e8482850161151a565b91505092915050565b600080600080608085870312156115ad57600080fd5b60006115bb8782880161151a565b94505060206115cc8782880161151a565b93505060406115dd8782880161151a565b92505060606115ee87828801611544565b91505092959194509250565b60008060006060848603121561160f57600080fd5b600061161d8682870161151a565b935050602061162e86828701611544565b925050604061163f86828701611559565b9150509250925092565b60006020828403121561165b57600080fd5b60006116698482850161152f565b91505092915050565b60006020828403121561168457600080fd5b600061169284828501611544565b91505092915050565b6116a481611dfb565b82525050565b60006116b582611b43565b6116bf8185611b59565b93506116cf818560208601611e53565b80840191505092915050565b60006116e682611b4e565b6116f08185611b64565b9350611700818560208601611e53565b61170981611ee4565b840191505092915050565b6000611721602683611b64565b915061172c82611f02565b604082019050919050565b6000611744601183611b64565b915061174f82611f51565b602082019050919050565b6000611767602683611b64565b915061177282611f7a565b604082019050919050565b600061178a602083611b64565b915061179582611fc9565b602082019050919050565b60006117ad601683611b64565b91506117b882611ff2565b602082019050919050565b60006117d0601483611b64565b91506117db8261201b565b602082019050919050565b60006117f3601883611b64565b91506117fe82612044565b602082019050919050565b6000611816601083611b64565b91506118218261206d565b602082019050919050565b6000611839600083611b59565b915061184482612096565b600082019050919050565b600061185c601d83611b64565b915061186782612099565b602082019050919050565b600061187f602a83611b64565b915061188a826120c2565b604082019050919050565b60006118a2600e83611b64565b91506118ad82612111565b602082019050919050565b6118c181611e39565b82525050565b6118d081611e43565b82525050565b60006118e282846116aa565b915081905092915050565b60006118f88261182c565b9150819050919050565b6000602082019050611917600083018461169b565b92915050565b6000606082019050611932600083018661169b565b61193f602083018561169b565b61194c60408301846118b8565b949350505050565b6000604082019050611969600083018561169b565b61197660208301846118b8565b9392505050565b6000602082019050818103600083015261199781846116db565b905092915050565b600060208201905081810360008301526119b881611714565b9050919050565b600060208201905081810360008301526119d881611737565b9050919050565b600060208201905081810360008301526119f88161175a565b9050919050565b60006020820190508181036000830152611a188161177d565b9050919050565b60006020820190508181036000830152611a38816117a0565b9050919050565b60006020820190508181036000830152611a58816117c3565b9050919050565b60006020820190508181036000830152611a78816117e6565b9050919050565b60006020820190508181036000830152611a9881611809565b9050919050565b60006020820190508181036000830152611ab88161184f565b9050919050565b60006020820190508181036000830152611ad881611872565b9050919050565b60006020820190508181036000830152611af881611895565b9050919050565b6000602082019050611b1460008301846118b8565b92915050565b6000604082019050611b2f60008301856118b8565b611b3c60208301846118c7565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611b8082611e39565b9150611b8b83611e39565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611bc057611bbf611e86565b5b828201905092915050565b6000611bd682611e39565b9150611be183611e39565b925082611bf157611bf0611eb5565b5b828204905092915050565b6000808291508390505b6001851115611c4657808604811115611c2257611c21611e86565b5b6001851615611c315780820291505b8081029050611c3f85611ef5565b9450611c06565b94509492505050565b6000611c5a82611e39565b9150611c6583611e43565b9250611c927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611c9a565b905092915050565b600082611caa5760019050611d66565b81611cb85760009050611d66565b8160018114611cce5760028114611cd857611d07565b6001915050611d66565b60ff841115611cea57611ce9611e86565b5b8360020a915084821115611d0157611d00611e86565b5b50611d66565b5060208310610133831016604e8410600b8410161715611d3c5782820a905083811115611d3757611d36611e86565b5b611d66565b611d498484846001611bfc565b92509050818404811115611d6057611d5f611e86565b5b81810290505b9392505050565b6000611d7882611e39565b9150611d8383611e39565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611dbc57611dbb611e86565b5b828202905092915050565b6000611dd282611e39565b9150611ddd83611e39565b925082821015611df057611def611e86565b5b828203905092915050565b6000611e0682611e19565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60005b83811015611e71578082015181840152602081019050611e56565b83811115611e80576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f68617665206e6f74207365742072617465000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f546f6b656e20616c726561647920736574207261746500000000000000000000600082015250565b7f6e6f7420656e6f75676820616c6c6f77616e6365000000000000000000000000600082015250565b7f6661696c656420746f207472616e7366657220746f6b656e0000000000000000600082015250565b7f65786365656420616c6c6f77616e636500000000000000000000000000000000600082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b61214381611dfb565b811461214e57600080fd5b50565b61215a81611e0d565b811461216557600080fd5b50565b61217181611e39565b811461217c57600080fd5b50565b61218881611e43565b811461219357600080fd5b5056fea2646970667358221220f53285bb180987cc748bfc3a827ee52ff15beb95d28521ea98d41422720184a964736f6c63430008040033";

type SwapTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapToken__factory extends ContractFactory {
  constructor(...args: SwapTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapToken> {
    return super.deploy(overrides || {}) as Promise<SwapToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapToken {
    return super.attach(address) as SwapToken;
  }
  connect(signer: Signer): SwapToken__factory {
    return super.connect(signer) as SwapToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapTokenInterface {
    return new utils.Interface(_abi) as SwapTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapToken {
    return new Contract(address, _abi, signerOrProvider) as SwapToken;
  }
}
